buildscript {
    repositories {
        ...
    }

    dependencies {
        ...
    }

    Properties localProps = new Properties()
    if (project.rootProject.file('local.properties').exists()) {
            localProps.load(project.rootProject.file('local.properties').newDataInputStream())
        }
        if (project.rootProject.file('gradle-local.properties').exists()) {
            localProps.load(project.rootProject.file('gradle-local.properties').newDataInputStream())
        }
        if (project.rootProject.file('gradle.properties').exists()) {
            localProps.load(project.rootProject.file('gradle.properties').newDataInputStream())
        }

    gradle.taskGraph.whenReady {
        tasks.each {task ->
            def projectKey = "gradle.task." + task.project.name
            def projectValue = localProps.getProperty(projectKey)
            def taskKey = "gradle.task." + task.name + "." + task.project.name
            def taskValue = localProps.getProperty(taskKey)
            if ("false".equalsIgnoreCase(projectValue) || "false".equalsIgnoreCase(taskValue)) {
                task.enabled(false)
            }
        }
    }
}